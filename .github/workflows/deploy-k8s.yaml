name: Deploy

env:

  GCLOUD_SA_KEY:  ${{ secrets.GCLOUD_SA_KEY }}
  GH_PAT: ${{ secrets.MOGUL_GITHUB_PERSONAL_ACCESS_TOKEN }}
  GCLOUD_PROJECT: joshlong
  GKE_CLUSTER: joshlong
  GCLOUD_ZONE: us-east4
  NS_NAME: mogul
  MESSAGE: "hello, Mogul Secrets"
  RMQ_HOST: ${secrets.RMQ_HOST}
  RMQ_USERNAME: ${secrets.RMQ_USERNAME}
  RMQ_PASSWORD: ${secrets.RMQ_PASSWORD}
  RMQ_VIRTUAL_HOST: ${secrets.RMQ_VIRTUAL_HOST}
  DB_USERNAME: ${secrets.DB_USERNAME}
  DB_PASSWORD: ${secrets.DB_PASSWORD}
  DB_HOST: ${secrets.DB_HOST}
  DB_SCHEMA: ${secrets.DB_SCHEMA}
  OPENAI_KEY: ${secrets.OPENAI_KEY}
  AWS_REGION: ${secrets.AWS_REGION}
  AWS_ACCESS_KEY_ID: ${secrets.AWS_ACCESS_KEY_ID}
  AWS_ACCESS_KEY_SECRET: ${secrets.AWS_ACCESS_KEY_SECRET}
  PODCAST_ASSETS_S3_BUCKET: ${secrets.PODCAST_ASSETS_S3_BUCKET}
  PODCAST_ASSETS_S3_BUCKET_FOLDER: ${secrets.PODCAST_ASSETS_S3_BUCKET_FOLDER}
  PODCAST_INPUT_S3_BUCKET: ${secrets.PODCAST_INPUT_S3_BUCKET}
  PODCAST_OUTPUT_S3_BUCKET: ${secrets.PODCAST_OUTPUT_S3_BUCKET}
  IDP_ISSUER_URI: ${secrets.IDP_ISSUER_URI}
on:
  repository_dispatch:
    types: update-event
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    name: Setup and Deploy
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4

      - name: "Setup PATH"
        run: |
          P="${GITHUB_WORKSPACE}/bin"
          mkdir -p $P
          echo "${P}" >> $GITHUB_PATH

      - uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCLOUD_SA_KEY }}'

      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ env.GKE_CLUSTER  }}'
          location: '${{ env.GCLOUD_ZONE }}'

      - run: |
          gcloud config set project $GCLOUD_PROJECT 
          gcloud --quiet auth configure-docker
          kubectl get pods

      - name: Deploy
        run: |
          kubectl get ns/$NS_NAME || kubectl create ns $NS_NAME 
          kubectl config set-context --current --namespace=$NS_NAME
          kubectl config view --minify | grep namespace: && echo "found the namespace.."
          cd $GITHUB_WORKSPACE
          export ROOT_DIR=$GITHUB_WORKSPACE
          ./bin/deploy.sh